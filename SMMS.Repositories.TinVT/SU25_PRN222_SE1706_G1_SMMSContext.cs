// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace SMMS.Repositories.TinVT.Models;

public partial class SU25_PRN222_SE1706_G1_SMMSContext : DbContext
{
    public SU25_PRN222_SE1706_G1_SMMSContext()
    {
    }

    public SU25_PRN222_SE1706_G1_SMMSContext(DbContextOptions<SU25_PRN222_SE1706_G1_SMMSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BloodTypePhuocNh> BloodTypePhuocNhs { get; set; }

    public virtual DbSet<HealthCheckSessionTinVt> HealthCheckSessionTinVts { get; set; }

    public virtual DbSet<HealthCheckStudentTinVt> HealthCheckStudentTinVts { get; set; }

    public virtual DbSet<MedicalEventNguyenVq> MedicalEventNguyenVqs { get; set; }

    public virtual DbSet<MedicalEventTypeNguyenVq> MedicalEventTypeNguyenVqs { get; set; }

    public virtual DbSet<MedicalSupplyQuanNm> MedicalSupplyQuanNms { get; set; }

    public virtual DbSet<MedicationSubmissionHienDh> MedicationSubmissionHienDhs { get; set; }

    public virtual DbSet<MedicationTypeHienDh> MedicationTypeHienDhs { get; set; }

    public virtual DbSet<Parent> Parents { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<SchoolNurse> SchoolNurses { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<StudentHealthProfilePhuocNh> StudentHealthProfilePhuocNhs { get; set; }

    public virtual DbSet<SupplyCategoryQuanNm> SupplyCategoryQuanNms { get; set; }

    public virtual DbSet<UserAccount> UserAccounts { get; set; }

    public virtual DbSet<VaccinationSessionKhoaNd> VaccinationSessionKhoaNds { get; set; }

    public virtual DbSet<VaccinationStudentKhoaNd> VaccinationStudentKhoaNds { get; set; }

    public virtual DbSet<VaccineKhoaNd> VaccineKhoaNds { get; set; }

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=TRUNGTIN\\TINSE;Initial Catalog=SU25_PRN222_SE1706_G1_SMMS;Persist Security Info=True;User ID=sa;Password=12345");

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BloodTypePhuocNh>(entity =>
        {
            entity.HasKey(e => e.BloodTypePhuocNhid).HasName("PK__BloodTyp__8E2126A28C5673EC");

            entity.ToTable("BloodTypePhuocNH");

            entity.Property(e => e.BloodTypePhuocNhid).HasColumnName("BloodTypePhuocNHID");
            entity.Property(e => e.RhFactor).HasMaxLength(10);
            entity.Property(e => e.TypeName).HasMaxLength(10);
        });

        modelBuilder.Entity<HealthCheckSessionTinVt>(entity =>
        {
            entity.ToTable("HealthCheckSessionTinVT");

            entity.Property(e => e.HealthCheckSessionTinVtid)
                .ValueGeneratedNever()
                .HasColumnName("HealthCheckSessionTinVTID");
            entity.Property(e => e.ConsentDeadline).HasPrecision(3);
            entity.Property(e => e.CreatedAt)
                .HasPrecision(3)
                .HasDefaultValueSql("(getutcdate())");
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.IsNotificationSent).HasDefaultValue(false);
            entity.Property(e => e.IsResultSent).HasDefaultValue(false);
            entity.Property(e => e.NotificationDate).HasPrecision(3);
            entity.Property(e => e.ScheduledCheckDate).HasPrecision(3);
            entity.Property(e => e.SessionCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.TotalStudentsChecked).HasDefaultValue(0);
            entity.Property(e => e.UpdatedAt)
                .HasPrecision(3)
                .HasDefaultValueSql("(getutcdate())");
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
        });

        modelBuilder.Entity<HealthCheckStudentTinVt>(entity =>
        {
            entity.ToTable("HealthCheckStudentTinVT");

            entity.Property(e => e.HealthCheckStudentTinVtid)
                .ValueGeneratedNever()
                .HasColumnName("HealthCheckStudentTinVTID");
            entity.Property(e => e.AbnormalFlag).HasDefaultValue(false);
            entity.Property(e => e.BloodPressure).HasMaxLength(20);
            entity.Property(e => e.Bmiscore)
                .HasComputedColumnSql("(CONVERT([decimal](5,2),[WeightKg]/power([HeightCm]/(100.0),(2))))", true)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("BMIScore");
            entity.Property(e => e.ConsultationRequired).HasDefaultValue(false);
            entity.Property(e => e.ConsultationScheduleDate).HasPrecision(3);
            entity.Property(e => e.HeightCm).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.ResultSentDate).HasPrecision(3);
            entity.Property(e => e.SessionId).HasColumnName("SessionID");
            entity.Property(e => e.StudentId).HasColumnName("StudentID");
            entity.Property(e => e.VisionLeft).HasColumnType("decimal(4, 2)");
            entity.Property(e => e.VisionRight).HasColumnType("decimal(4, 2)");
            entity.Property(e => e.WeightKg).HasColumnType("decimal(5, 2)");

            entity.HasOne(d => d.Session).WithMany(p => p.HealthCheckStudentTinVts)
                .HasForeignKey(d => d.SessionId)
                .HasConstraintName("FK_HCStudent_Session");
        });

        modelBuilder.Entity<MedicalEventNguyenVq>(entity =>
        {
            entity.HasKey(e => e.MedicalEventNguyenVqid).HasName("PK__MedicalE__42ABA6C7FB703868");

            entity.ToTable("MedicalEventNguyenVQ");

            entity.Property(e => e.MedicalEventNguyenVqid).HasColumnName("MedicalEventNguyenVQID");
            entity.Property(e => e.EventDateTime).HasColumnType("datetime");
            entity.Property(e => e.HasGoneHospitalTransfer).HasDefaultValue(false);
            entity.Property(e => e.HasParentBeenInformed).HasDefaultValue(false);
            entity.Property(e => e.Situation).HasMaxLength(100);

            entity.HasOne(d => d.HandledByNurse).WithMany(p => p.MedicalEventNguyenVqs)
                .HasForeignKey(d => d.HandledByNurseId)
                .HasConstraintName("FK__MedicalEv__Handl__5BE2A6F2");

            entity.HasOne(d => d.MedicalEventType).WithMany(p => p.MedicalEventNguyenVqs)
                .HasForeignKey(d => d.MedicalEventTypeId)
                .HasConstraintName("FK__MedicalEv__Medic__5AEE82B9");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicalEventNguyenVqs)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__MedicalEv__Stude__59FA5E80");
        });

        modelBuilder.Entity<MedicalEventTypeNguyenVq>(entity =>
        {
            entity.HasKey(e => e.MedicalEventTypeNguyenVqid).HasName("PK__MedicalE__38C34D22E79E97EB");

            entity.ToTable("MedicalEventTypeNguyenVQ");

            entity.Property(e => e.MedicalEventTypeNguyenVqid).HasColumnName("MedicalEventTypeNguyenVQID");
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<MedicalSupplyQuanNm>(entity =>
        {
            entity.HasKey(e => e.MedicalSupplyQuanNmid).HasName("PK__MedicalS__388A2BFD54D61210");

            entity.ToTable("MedicalSupplyQuanNM");

            entity.Property(e => e.MedicalSupplyQuanNmid).HasColumnName("MedicalSupplyQuanNMID");
            entity.Property(e => e.Supplier).HasMaxLength(100);
            entity.Property(e => e.SupplyName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(50);

            entity.HasOne(d => d.Category).WithMany(p => p.MedicalSupplyQuanNms)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MedicalSu__Categ__778AC167");
        });

        modelBuilder.Entity<MedicationSubmissionHienDh>(entity =>
        {
            entity.HasKey(e => e.MedicationSubmissionHienDhid).HasName("PK__Medicati__3B9356FF3EA640B5");

            entity.ToTable("MedicationSubmissionHienDH");

            entity.Property(e => e.MedicationSubmissionHienDhid).HasColumnName("MedicationSubmissionHienDHID");
            entity.Property(e => e.Dosage).HasMaxLength(50);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.SubmissionDate).HasColumnType("datetime");

            entity.HasOne(d => d.MedicationType).WithMany(p => p.MedicationSubmissionHienDhs)
                .HasForeignKey(d => d.MedicationTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Medicatio__Medic__5070F446");

            entity.HasOne(d => d.Parent).WithMany(p => p.MedicationSubmissionHienDhs)
                .HasForeignKey(d => d.ParentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Medicatio__Paren__52593CB8");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicationSubmissionHienDhs)
                .HasForeignKey(d => d.StudentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Medicatio__Stude__5165187F");
        });

        modelBuilder.Entity<MedicationTypeHienDh>(entity =>
        {
            entity.HasKey(e => e.MedicationTypeHienDhid).HasName("PK__Medicati__6DCC8B7606D4597A");

            entity.ToTable("MedicationTypeHienDH");

            entity.Property(e => e.MedicationTypeHienDhid).HasColumnName("MedicationTypeHienDHID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(50);
            entity.Property(e => e.UsageMethod).HasMaxLength(100);
        });

        modelBuilder.Entity<Parent>(entity =>
        {
            entity.HasKey(e => e.ParentId).HasName("PK__Parent__D339516F86446F00");

            entity.ToTable("Parent");

            entity.Property(e => e.Occupation).HasMaxLength(100);
            entity.Property(e => e.RelationshipToStudent).HasMaxLength(50);
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.Parents)
                .HasForeignKey(d => d.UserAccountId)
                .HasConstraintName("FK__Parent__UserAcco__3F466844");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__8AFACE1AA4B794C8");

            entity.ToTable("Role");

            entity.Property(e => e.RoleName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<SchoolNurse>(entity =>
        {
            entity.HasKey(e => e.NurseId).HasName("PK__SchoolNu__4384784956019868");

            entity.ToTable("SchoolNurse");

            entity.Property(e => e.CertificationCode).HasMaxLength(50);
            entity.Property(e => e.Department).HasMaxLength(50);
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.SchoolNurses)
                .HasForeignKey(d => d.UserAccountId)
                .HasConstraintName("FK__SchoolNur__UserA__45F365D3");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasKey(e => e.StudentId).HasName("PK__Student__32C52B99B38A2CAE");

            entity.ToTable("Student");

            entity.Property(e => e.ClassName).HasMaxLength(50);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.StudentCode).HasMaxLength(50);
            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");

            entity.HasOne(d => d.UserAccount).WithMany(p => p.Students)
                .HasForeignKey(d => d.UserAccountId)
                .HasConstraintName("FK__Student__UserAcc__3C69FB99");

            entity.HasMany(d => d.Parents).WithMany(p => p.Students)
                .UsingEntity<Dictionary<string, object>>(
                    "StudentParent",
                    r => r.HasOne<Parent>().WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__StudentPa__Paren__4316F928"),
                    l => l.HasOne<Student>().WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__StudentPa__Stude__4222D4EF"),
                    j =>
                    {
                        j.HasKey("StudentId", "ParentId").HasName("PK__StudentP__DFF6BE8FE771961A");
                        j.ToTable("StudentParent");
                    });
        });

        modelBuilder.Entity<StudentHealthProfilePhuocNh>(entity =>
        {
            entity.HasKey(e => e.StudentHealthProfilePhuocNhid).HasName("PK__StudentH__B1ABE6A135251DF5");

            entity.ToTable("StudentHealthProfilePhuocNH");

            entity.Property(e => e.StudentHealthProfilePhuocNhid).HasColumnName("StudentHealthProfilePhuocNHID");
            entity.Property(e => e.BloodTypePhuocNhid).HasColumnName("BloodTypePhuocNHID");
            entity.Property(e => e.LastCheckupDate).HasColumnType("datetime");

            entity.HasOne(d => d.BloodTypePhuocNh).WithMany(p => p.StudentHealthProfilePhuocNhs)
                .HasForeignKey(d => d.BloodTypePhuocNhid)
                .HasConstraintName("FK__StudentHe__Blood__4BAC3F29");

            entity.HasOne(d => d.Student).WithMany(p => p.StudentHealthProfilePhuocNhs)
                .HasForeignKey(d => d.StudentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__StudentHe__Stude__4AB81AF0");
        });

        modelBuilder.Entity<SupplyCategoryQuanNm>(entity =>
        {
            entity.HasKey(e => e.SupplyCategoryQuanNmid).HasName("PK__SupplyCa__8B8CF1369C53E2D7");

            entity.ToTable("SupplyCategoryQuanNM");

            entity.Property(e => e.SupplyCategoryQuanNmid).HasColumnName("SupplyCategoryQuanNMID");
            entity.Property(e => e.CategoryName)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<UserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId).HasName("PK__UserAcco__DA6C70BAF91D7C73");

            entity.ToTable("UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Role).WithMany(p => p.UserAccounts)
                .HasForeignKey(d => d.RoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserAccou__RoleI__398D8EEE");
        });

        modelBuilder.Entity<VaccinationSessionKhoaNd>(entity =>
        {
            entity.HasKey(e => e.VaccinationSessionKhoaNdid).HasName("PK__Vaccinat__DC755EF722A4337E");

            entity.ToTable("VaccinationSessionKhoaND");

            entity.Property(e => e.VaccinationSessionKhoaNdid).HasColumnName("VaccinationSessionKhoaNDID");
            entity.Property(e => e.VaccineBatchNumber).HasMaxLength(50);

            entity.HasOne(d => d.ConductedByNavigation).WithMany(p => p.VaccinationSessionKhoaNds)
                .HasForeignKey(d => d.ConductedBy)
                .HasConstraintName("FK__Vaccinati__Condu__619B8048");

            entity.HasOne(d => d.Vaccine).WithMany(p => p.VaccinationSessionKhoaNds)
                .HasForeignKey(d => d.VaccineId)
                .HasConstraintName("FK__Vaccinati__Vacci__60A75C0F");
        });

        modelBuilder.Entity<VaccinationStudentKhoaNd>(entity =>
        {
            entity.HasKey(e => e.VaccinationStudentKhoaNdid).HasName("PK__Vaccinat__24ED8454E2F71F76");

            entity.ToTable("VaccinationStudentKhoaND");

            entity.Property(e => e.VaccinationStudentKhoaNdid).HasColumnName("VaccinationStudentKhoaNDID");
            entity.Property(e => e.ConsentReceivedDate).HasColumnType("datetime");
            entity.Property(e => e.ConsentStatus).HasMaxLength(50);
            entity.Property(e => e.IsNotificationSent).HasDefaultValue(false);
            entity.Property(e => e.IsVaccinated).HasDefaultValue(false);
            entity.Property(e => e.NotificationSentDate).HasColumnType("datetime");
            entity.Property(e => e.StudentId).HasColumnName("StudentID");
            entity.Property(e => e.VaccinationSessionId).HasColumnName("VaccinationSessionID");

            entity.HasOne(d => d.Student).WithMany(p => p.VaccinationStudentKhoaNds)
                .HasForeignKey(d => d.StudentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccinati__Stude__6754599E");

            entity.HasOne(d => d.VaccinationSession).WithMany(p => p.VaccinationStudentKhoaNds)
                .HasForeignKey(d => d.VaccinationSessionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vaccinati__Vacci__66603565");
        });

        modelBuilder.Entity<VaccineKhoaNd>(entity =>
        {
            entity.HasKey(e => e.VaccineKhoaNdid).HasName("PK__VaccineK__D76CCA77E7E333F4");

            entity.ToTable("VaccineKhoaND");

            entity.Property(e => e.VaccineKhoaNdid).HasColumnName("VaccineKhoaNDID");
            entity.Property(e => e.Name).HasMaxLength(100);
            entity.Property(e => e.Type).HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}